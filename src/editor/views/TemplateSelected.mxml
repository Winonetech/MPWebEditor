<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 title="应用模版" mouseEnabled="false"
		 fontSize="18" initialize="init()">
	
	<s:layout>
		<s:VerticalLayout paddingTop="10" paddingRight="10" paddingLeft="10" paddingBottom="10"/>
	</s:layout>
	
	<s:VGroup mouseEnabled="false" gap="10" width="100%">
		<s:Button label="关闭窗口" click="close_clickHandler(event)" fontSize="16"/>
		
		<s:List id="list" width="100%" height="240" dataProvider="{temp}" verticalScrollPolicy="auto"
				fontSize="16" labelField="name" click="item_clickHandler(event)"/>
	</s:VGroup>
	
	<fx:Script>
		<![CDATA[
			import editor.core.MDConfig;
			import editor.core.MDProvider;
			import editor.core.MDVars;
			import editor.utils.CommandUtil;
			import editor.vos.Page;
			
			import mx.collections.ArrayList;
			import mx.managers.PopUpManager;
			
			import spark.components.Label;
			import spark.skins.spark.DefaultItemRenderer;
			
			/**
			 * @private
			 */
			private function init():void
			{
				initLayout();
				getTemplateData();
			}
			
			
			/**
			 * @private
			 */
			private function initLayout():void
			{
				width  = stage.width/10;
				height = stage.height/3;
				x      = 225;
				y      = 100;
			}
			
			
			/**
			 * 获取模版数据。
			 */
			private function getTemplateData():void
			{
				if (temp.length == 0) CommandUtil.getTemplateData();
			}
			
			
			/**
			 * 关闭弹出窗口。
			 */
			private function close_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			
			/**
			 * @private
			 */
			private function item_clickHandler(event:MouseEvent):void
			{
				if(event.target is Label || event.target is DefaultItemRenderer)
				{
					var page:Page = config.selectedSheet as Page;
					if (page)
					{
						CommandUtil.addTemplate(
							page.parent ? page.parent.id : provider.layoutID,
							temp.getItemAt(list.selectedIndex)["id"], page.order + 1);
					}
					else
					{
						CommandUtil.addTemplate(
							provider.layoutID, temp.getItemAt(list.selectedIndex)["id"], 
							MDVars.instance.sheets.program.children.length);
					}
					
					PopUpManager.removePopUp(this);
				}
			}
			
			
			/**
			 * @private
			 */
			private function get config():MDConfig
			{
				return MDConfig.instance;
			}
			
			
			/**
			 * @private
			 */
			private function get vars():MDVars
			{
				return MDVars.instance;
			}
			
			
			
			
			/**
			 * @private
			 */
			private function get provider():MDProvider
			{
				return MDProvider.instance;
			}
			
			/**
			 * 
			 * 存储已保存模版。
			 * 
			 */
			[Bindable]
			public var temp:ArrayList = new ArrayList;
			
		]]>
	</fx:Script>
</s:Panel>
